<?php

/**
 * Implements hook_schema().
 */
function fieldable_panels_panes_schema() {
  $schema = array();

  $schema['fieldable_panels_panes'] = array(
    'description' => 'Entity table for panel pane content with fields.',
    'fields' => array(
      'fpid' => array(
        'description' => 'The primary identifier for the entity.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => 'The current version in use for this entity.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'bundle' => array(
        'description' => 'The bundle of the entity.',
        'type' => 'varchar',
        'length' => 255,
      ),
      'title' => array(
        'description' => 'The title of the entity.',
        'type' => 'varchar',
        'length' => 255,
      ),
      'reusable' => array(
        'description' => 'Whether or not this entity will appear in the Add Content dialog.',
        'type' => 'int',
        'size' => 'tiny',
      ),
      'admin_title' => array(
        'description' => 'The title it will appear in the Add Content dialog as.',
        'type' => 'varchar',
        'length' => 255,
      ),
      'admin_description' => array(
        'description' => 'The description it will appear in the Add Content dialog with.',
        'type' => 'text',
      ),
      'category' => array(
        'description' => 'The category it will appear in the Add Content dialog under.',
        'type' => 'text',
      ),
      'view_access' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Access rules to describe if the user has view access to this entity.',
        'serialize' => TRUE,
        'object default' => array(),
      ),
      'edit_access' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Access rules to describe if the user has view access to this entity.',
        'serialize' => TRUE,
        'object default' => array(),
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the entity was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the entity was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('fpid'),
    'indexes' => array(
      'reusable' => array('reusable'),
    ),
  );
  if (module_exists('uuid')) {
    uuid_schema_generate($schema, 'fieldable_panels_panes');
  }

  $schema['fieldable_panels_panes_revision'] = array(
    'description' => 'Entity revision table for panel pane content with fields.',
    'fields' => array(
      'fpid' => array(
        'description' => 'The id this revision belongs to',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'vid' => array(
        'description' => 'The primary identifier for this version.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'timestamp' => array(
        'description' => 'The Unix timestamp when the revision was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'The author of the revision.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'title' => array(
        'description' => 'The title of the entity.',
        'type' => 'varchar',
        'length' => 255,
      ),
      'log' => array(
        'description' => t('A log message associated with the revision.'),
        'type' => 'text',
        'size' => 'big',
      ),
    ),
    'primary key' => array('vid'),
    'indexes' => array(
      'fpid' => array('fpid', 'vid'),
    ),
  );
  if (module_exists('uuid')) {
    uuid_schema_generate($schema, 'fieldable_panels_panes_revision', 'vuuid');
  }

  return $schema;
}

/**
 * Add UUID support.
 */
function fieldable_panels_panes_update_7100() {
  if (module_exists('uuid')) {
    _fieldable_panels_panes_add_uuid();
  }
}

/**
 * Check if we've already added the uuid field.
 */
function _fieldable_panels_panes_uuid_exists($schema, $table) {
  foreach ($schema[$table]['fields'] as $name => $field) {
    if (db_field_exists($table, $name)) {
      return TRUE;
    }
  }
  return FALSE;
}

function _fieldable_panels_panes_add_uuid() {
  $info = entity_get_info('fieldable_panels_pane');
  if (isset($info['uuid']) && $info['uuid'] == TRUE) {
    $schema = array();
    // Add the UUID columns to the (empty) definition.
    uuid_schema_alter($schema);
    if (!_fieldable_panels_panes_uuid_exists($schema, $info['base table'])) {
      // Add the UUID field in the database.
      uuid_add_field($schema, $info['base table']);
    }
    if (!empty($info['revision table']) && !_fieldable_panels_panes_uuid_exists($schema, $info['revision table'])) {
      // Add the VUUID field in the database.
      uuid_add_field($schema, $info['revision table']);
    }
  }
}
